// <auto-generated />
using System;
using CrowdFoundAppTeam3.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CrowdFoundAppTeam3.Migrations
{
    [DbContext(typeof(CrowdFundDbContext))]
    [Migration("20221127175246_Yianis")]
    partial class Yianis
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CrowdFoundAppTeam3.Domain.FundingPackage", b =>
                {
                    b.Property<int>("FundingPackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FundingPackageId"));

                    b.Property<string>("FundingPackageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FundingPackageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("RewardPackage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FundingPackageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("FundingPackages");
                });

            modelBuilder.Entity("CrowdFoundAppTeam3.Domain.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectCategory")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VideoPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CrowdFoundAppTeam3.Domain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("CrowdFoundAppTeam3.Domain.Backer", b =>
                {
                    b.HasBaseType("CrowdFoundAppTeam3.Domain.User");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Backer");
                });

            modelBuilder.Entity("CrowdFoundAppTeam3.Domain.ProjectCreator", b =>
                {
                    b.HasBaseType("CrowdFoundAppTeam3.Domain.User");

                    b.HasDiscriminator().HasValue("ProjectCreator");
                });

            modelBuilder.Entity("CrowdFoundAppTeam3.Domain.FundingPackage", b =>
                {
                    b.HasOne("CrowdFoundAppTeam3.Domain.Project", "Project")
                        .WithMany("FundingPackages")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("CrowdFoundAppTeam3.Domain.Project", b =>
                {
                    b.HasOne("CrowdFoundAppTeam3.Domain.User", null)
                        .WithMany("Projects")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("CrowdFoundAppTeam3.Domain.Project", b =>
                {
                    b.Navigation("FundingPackages");
                });

            modelBuilder.Entity("CrowdFoundAppTeam3.Domain.User", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
